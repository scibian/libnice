Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 libnice (0.1.14+git20180504-1+sipe) UNRELEASED; urgency=medium
 .
   * New upstream release + extra Sipe patches.
   * Auto build.
Author: Jakub Adam <jakub.adam@ktknet.cz>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2018-08-01

--- libnice-0.1.14+git20180504.orig/agent/component.c
+++ libnice-0.1.14+git20180504/agent/component.c
@@ -1510,7 +1510,8 @@ nice_component_verify_remote_candidate (
                 (cand->transport == NICE_CANDIDATE_TRANSPORT_TCP_ACTIVE ||
                     cand->transport == NICE_CANDIDATE_TRANSPORT_TCP_PASSIVE ||
                     cand->transport == NICE_CANDIDATE_TRANSPORT_TCP_SO)) ||
-            cand->transport == NICE_CANDIDATE_TRANSPORT_UDP) &&
+            cand->transport == NICE_CANDIDATE_TRANSPORT_UDP ||
+            nicesock->type == NICE_SOCKET_TYPE_UDP_TURN) &&
         nice_address_equal (address, &cand->addr)) {
       /* fast return if it's already the first */
       if (item == component->valid_candidates)
--- libnice-0.1.14+git20180504.orig/agent/discovery.c
+++ libnice-0.1.14+git20180504/agent/discovery.c
@@ -338,7 +338,7 @@ static guint priv_highest_remote_foundat
   for (highest = 1;; highest++) {
     gboolean taken = FALSE;
 
-    g_snprintf (foundation, NICE_CANDIDATE_MAX_FOUNDATION, "remote-%u",
+    g_snprintf (foundation, NICE_CANDIDATE_MAX_FOUNDATION, "remote%u",
         highest);
     for (i = component->remote_candidates; i; i = i->next) {
       NiceCandidate *cand = i->data;
@@ -468,7 +468,7 @@ static void priv_assign_remote_foundatio
   if (component) {
     next_remote_id = priv_highest_remote_foundation (component);
     g_snprintf (candidate->foundation, NICE_CANDIDATE_MAX_FOUNDATION,
-        "remote-%u", next_remote_id);
+        "remote%u", next_remote_id);
   }
 }
 
--- libnice-0.1.14+git20180504.orig/agent/pseudotcp.h
+++ libnice-0.1.14+git20180504/agent/pseudotcp.h
@@ -78,6 +78,14 @@
 #ifndef ECONNRESET
 #  define ECONNRESET WSAECONNRESET
 #endif
+
+#ifndef EMSGSIZE
+#  define EMSGSIZE WSAEMSGSIZE
+#endif
+
+#ifndef ETIMEDOUT
+#  define ETIMEDOUT WSAETIMEDOUT
+#endif
 #endif
 #endif
 
--- /dev/null
+++ libnice-0.1.14+git20180504/libnice_0.1.14-1+sipe+20180707220955~debian.dsc
@@ -0,0 +1,27 @@
+Format: 3.0 (quilt)
+Source: libnice
+Binary: libnice10, libnice-dev, gstreamer1.0-nice, libnice-doc, gir1.2-nice-0.1
+Architecture: any all
+Version: 0.1.14-1+sipe+20180707220955~debian
+Maintainer: Debian Telepathy maintainers <pkg-telepathy-maintainers@lists.alioth.debian.org>
+Uploaders: Dafydd Harries <daf@debian.org>, Sjoerd Simons <sjoerd@debian.org>, Laurent Bigonville <bigon@debian.org>
+Homepage: https://nice.freedesktop.org/
+Standards-Version: 4.1.0
+Vcs-Browser: https://anonscm.debian.org/cgit/pkg-telepathy/libnice.git/
+Vcs-Git: https://anonscm.debian.org/git/pkg-telepathy/libnice.git
+Build-Depends: debhelper (>= 10), gobject-introspection (>= 1.30.0), gtk-doc-tools, libgirepository1.0-dev (>= 1.30.0), libglib2.0-dev (>= 2.44), libgnutls28-dev (>= 2.12.0), libgstreamer1.0-dev, libgupnp-igd-1.0-dev (>= 0.2.4)
+Package-List:
+ gir1.2-nice-0.1 deb introspection optional arch=any
+ gstreamer1.0-nice deb net optional arch=any
+ libnice-dev deb libdevel optional arch=any
+ libnice-doc deb doc optional arch=all
+ libnice10 deb libs optional arch=any
+Checksums-Sha1:
+ 7e9fd07fca17baedc491c01224d97b1525842715 429144 libnice_0.1.14.orig.tar.gz
+ d42fa0bbb41753467f6f1f3711adcf03d2a134bb 16760 libnice_0.1.14-1+sipe+20180707220955~debian.debian.tar.xz
+Checksums-Sha256:
+ 83389ccfa8d7686f4a18430f8cd1d645c90325b8df1aefc05074c2bdb0539670 429144 libnice_0.1.14.orig.tar.gz
+ 42be2207d9b45f40b17c16d35b4b839d8ffc458ff16cf9639bda9a4c4d68a898 16760 libnice_0.1.14-1+sipe+20180707220955~debian.debian.tar.xz
+Files:
+ 61e5e44b8ea4aba0785fc8212770dcc7 429144 libnice_0.1.14.orig.tar.gz
+ 8e48c9474483fc39eecc5b19eb7a4757 16760 libnice_0.1.14-1+sipe+20180707220955~debian.debian.tar.xz
--- libnice-0.1.14+git20180504.orig/stun/rand.c
+++ libnice-0.1.14+git20180504/stun/rand.c
@@ -45,7 +45,7 @@
 #include <windows.h>
 #include <wincrypt.h>
 
-void nice_RAND_bytes (uint8_t *dst, int len)
+void nice_RAND_nonce (uint8_t *dst, int len)
 {
   HCRYPTPROV hCryptProv;
   LPCSTR container = "Libnice key container";
--- libnice-0.1.14+git20180504.orig/tests/test-pseudotcp-fuzzy.c
+++ libnice-0.1.14+git20180504/tests/test-pseudotcp-fuzzy.c
@@ -129,7 +129,7 @@ write_to_sock (PseudoTcpSocket *sock)
       total += wlen;
       total_read += wlen;
       if (wlen < (gint) len) {
-        g_debug ("seeking  %ld from %lu", wlen - len, ftell (in));
+        g_debug ("seeking  %" G_GSIZE_FORMAT " from %lu", wlen - len, ftell (in));
         fseek (in, wlen - len, SEEK_CUR);
         g_assert (!feof (in));
         g_debug ("Socket queue full after %d bytes written", total);
@@ -355,7 +355,7 @@ static void adjust_clock (PseudoTcpSocke
 
   if (pseudo_tcp_socket_get_next_clock (sock, &timeout)) {
     timeout -= g_get_monotonic_time () / 1000;
-    g_debug ("Socket %p: Adjusting clock to %ld ms", sock, timeout);
+    g_debug ("Socket %p: Adjusting clock to %" G_GUINT64_FORMAT " ms", sock, timeout);
     if (sock == left) {
       if (left_clock != 0)
          g_source_remove (left_clock);
--- libnice-0.1.14+git20180504.orig/tests/test-pseudotcp.c
+++ libnice-0.1.14+git20180504/tests/test-pseudotcp.c
@@ -81,7 +81,8 @@ static void write_to_sock (PseudoTcpSock
       total += wlen;
       total_read += wlen;
       if (wlen < (gint) len) {
-        g_debug ("seeking  %ld from %lu", wlen - len, ftell (in));
+        g_debug ("seeking  %" G_GSIZE_FORMAT " from %lu", wlen - len,
+            ftell (in));
         fseek (in, wlen - len, SEEK_CUR);
         g_assert (!feof (in));
         g_debug ("Socket queue full after %d bytes written", total);
